package com.jdaalba.kyu4

import org.scalatest.FunSuite

class RangeExtractionTest extends FunSuite {

  test("Sort a list without any element") {
    assert(RangeExtraction.solution(List()) === "")
  }

  test("Sort a list with 1 element") {
    assert(RangeExtraction.solution(List(3)) === "3")
  }

  test("Sort a list with 2 elements") {
    assert(RangeExtraction.solution(Range(1, 3).toList) === "1,2")
  }

  test("Sort a list with 3 elements") {
    assert(RangeExtraction.solution(Range(1, 4).toList) === "1-3")
  }

  test("Sample 1") {
    assert(RangeExtraction.solution(List(-6, -3, -2, -1, 0, 1, 3, 4, 5, 7, 8, 9, 10, 11, 14, 15, 17, 18, 19, 20)) === "-6,-3-1,3-5,7-11,14,15,17-20")
  }

  test("Sample 2") {
    assert(RangeExtraction.solution(List(-3, -2, -1, 2, 10, 15, 16, 18, 19, 20)) === "-3--1,2,10,15,16,18-20")
  }

  test("Failed 1") {
    assert(RangeExtraction.solution(List(58, 59, 60, 61, 62, 63, 64, -84, -44, 36, 37, 38, 39, 40, -85, -84, -83, -82, -81, -80, -79)) === "58-64,-84,-44,36-40,-85--79")
  }

  test("final test") {
    assert(RangeExtraction.solution(List(-6, -3, -2, -1, 0, 1, 3, 4, 5, 7, 8, 9, 10, 11, 14, 15, 17, 18, 19, 20)) === "-6,-3-1,3-5,7-11,14,15,17-20")
    assert(RangeExtraction.solution(List(-3, -2, -1, 2, 10, 15, 16, 18, 19, 20)) === "-3--1,2,10,15,16,18-20")
    assert(RangeExtraction.solution(List(1, 2, 3, 4, 5)) === "1-5")
    assert(RangeExtraction.solution(List()) === "")
    assert(RangeExtraction.solution(List(4)) === "4")
    assert(RangeExtraction.solution(List(70, -21, -20, 6, 34, 2, -75, 45, 46, -20, -19, -18, -17, -16, -15, -14, -74, 23, 8, 9, 10, 11, 12, 13, -55, -54, -53, 13, 14, 15, -70, 33, 34, 35, 36, 37, 38, 39, 81, -67, 23, 39, 40, 41, 42, 43, 44)) === "70,-21,-20,6,34,2,-75,45,46,-20--14,-74,23,8-13,-55--53,13-15,-70,33-39,81,-67,23,39-44")
    assert(RangeExtraction.solution(List(-17, -16, -15, -14, -13, -12, -11, 3, -77, -67, -66, -65, -64, -63, -28, -18, -47, -46, -45, -44, -43, 74, -74, 99, 100, 101, 102, 103, 104, -14, -13, -99, 71, 72, -77, -76, -75, -74, -73, -72, 46, -11, -10, -9, -8, -42, -41, -14, -36, 55, 56, 57, 58)) === "-17--11,3,-77,-67--63,-28,-18,-47--43,74,-74,99-104,-14,-13,-99,71,72,-77--72,46,-11--8,-42,-41,-14,-36,55-58")
    assert(RangeExtraction.solution(List(-45, 12, 13, 14, 15, 16, 17, -44, 18, 19, 71, 72, -5, -2, -1, 0, 1, 24, 25, 26, 27, 28, 62, -45, -58)) === "-45,12-17,-44,18,19,71,72,-5,-2-1,24-28,62,-45,-58")
    assert(RangeExtraction.solution(List(8, 9, 10, 11, 12, -54, -50, -49, -48, 17, 18, 19, 20, 21, 22, 46, -80, -79, 34, -20)) === "8-12,-54,-50--48,17-22,46,-80,-79,34,-20")
    assert(RangeExtraction.solution(List(52, 53, 54, 55, 56, -71, -70, -71, -70, -69, -68, -67, -66, 85, -2)) === "52-56,-71,-70,-71--66,85,-2")
    assert(RangeExtraction.solution(List(-16)) === "-16")
    assert(RangeExtraction.solution(List(86, 42, -92, -92, -91, -90, 85, -8, -7, -6, -5, -29, -41, -16, -15, -14, -13, -70, -69, -68, 71, 72, 73, 74, 75, 76, 77, -21, 14, 15, 16, 17, 18, 19, -6, 33, 5, 13, 14, 15, 16, 17, 18, 76, -65, -64, -63, -62, -61)) === "86,42,-92,-92--90,85,-8--5,-29,-41,-16--13,-70--68,71-77,-21,14-19,-6,33,5,13-18,76,-65--61")
    assert(RangeExtraction.solution(List(-22, -21, -20, -19, -18, -17, 99, 82, -23, 29, 12, 41, -98, 66, -44, 48, 49, 50, 51, 52, 53, 6, 35, 36, 37, 38, 39, 40, 13, 71, 72, 28, 29, 30, 31, 93, 94, 62, 57, 81, -100, -16, -73, -35, 22)) === "-22--17,99,82,-23,29,12,41,-98,66,-44,48-53,6,35-40,13,71,72,28-31,93,94,62,57,81,-100,-16,-73,-35,22")
    assert(RangeExtraction.solution(List(-89, -88, -87, -86, -85, -84, -15)) === "-89--84,-15")
    assert(RangeExtraction.solution(List(41, 42, 43, 44, -91, -90, -89, -88)) === "41-44,-91--88")
    assert(RangeExtraction.solution(List(-27, -48, -47, -46, -45, -44, -43, -42, -13, 4, 5, 6, 7, 8, 47, 48, -36, -35, -34, -33, 8, 60, -11, -82, -81, -80, -69)) === "-27,-48--42,-13,4-8,47,48,-36--33,8,60,-11,-82--80,-69")
    assert(RangeExtraction.solution(List(-87, -86, -85, -34, -60, 26, 27, 28, -31, 14, -63, -77, -27, -26, -25, -24, -23, -22, -59, -58, -57, 81, 29, 30, 31, 32, 33, 34, 35, 18, 91, 17, 18, 19, 20, 21, -86, -85, -84, 90, 91, 92, 18, 30, 23, -63, -62, -61, -60, -59, -58, -57, -52, -38, -37, -36, -35, -33, -32, -71, -63, -62, -61, -60, -59, 30, 27, -14)) === "-87--85,-34,-60,26-28,-31,14,-63,-77,-27--22,-59--57,81,29-35,18,91,17-21,-86--84,90-92,18,30,23,-63--57,-52,-38--35,-33,-32,-71,-63--59,30,27,-14")
    assert(RangeExtraction.solution(List(34, -30, -29, -28, -27, -26, -88, -87, -86, -85, -84, -83, 10, 56, 63, 64, 65, 66, 67, 68, 62, 63, 64, 65, -29, -56, -55, -54, 41, 42)) === "34,-30--26,-88--83,10,56,63-68,62-65,-29,-56--54,41,42")
    assert(RangeExtraction.solution(List(-6, 81, 82, 83, 84, 85, 86, 87, -35, -34, -33, -32, -31, -30, 23, 34, 35, 36, 37, 38, 39, 84, 85, -81, 48, -94, -93, -92, -91, 57, -97, -48, -47, -46, -6, 11, 12, 13, 14, 15, -94)) === "-6,81-87,-35--30,23,34-39,84,85,-81,48,-94--91,57,-97,-48--46,-6,11-15,-94")
    assert(RangeExtraction.solution(List(77, 90, 23, 59, 60, 61, -37, -61, -60, -59, 61, -60, -59, 83, -56, -81, -80, -16, -15, -14, -39, -38, -37, 61, -77, -76, -75, -74, -14, -21, -20, -14, -13, -12, -11, -10, -9, -8, -9, 41, -54, -53, -88, -14, 84, 85, 86, 87, -96, 60)) === "77,90,23,59-61,-37,-61--59,61,-60,-59,83,-56,-81,-80,-16--14,-39--37,61,-77--74,-14,-21,-20,-14--8,-9,41,-54,-53,-88,-14,84-87,-96,60")
    assert(RangeExtraction.solution(List(63, 5, 6, 7, 8, 9, -26, 71, 18, 19, -95, -39, -38, -37, -36, -19, 77, 53, 21, 22, 23, 24, 25, 26, -9, -8, -7, -6, -5, -4, -33, 71, -88, 56, 60, 83, 84, 85, -4)) === "63,5-9,-26,71,18,19,-95,-39--36,-19,77,53,21-26,-9--4,-33,71,-88,56,60,83-85,-4")
    assert(RangeExtraction.solution(List(-46, 10, -27, -26, -25, -24, -23, -22, -21, -93, -92, -91, -90, -89)) === "-46,10,-27--21,-93--89")
    assert(RangeExtraction.solution(List(-29, 60, 57, 58, 80, 81, 82, 83, 13, -10, 76, 77, 78, 79, 80, 81)) === "-29,60,57,58,80-83,13,-10,76-81")
    assert(RangeExtraction.solution(List(91, 27, -27, -26, -25, -24, -23, -22, -21, -100, 94, 95, 96, 97, 21, -53, -78, 26, -49, -13, 84, -43, -85, 33, 50, -27)) === "91,27,-27--21,-100,94-97,21,-53,-78,26,-49,-13,84,-43,-85,33,50,-27")
    assert(RangeExtraction.solution(List(95, 97, 90, 91, 92, 9, 7, 8, 9, 10, 56, -98, -97, -96, -22, -67, -66, -65, -64, -63, -62, -61)) === "95,97,90-92,9,7-10,56,-98--96,-22,-67--61")
    assert(RangeExtraction.solution(List(97, 24, 25, 26, 27, -75, -74, -73, -72, -71, -70, -69, 85, 86, 87, 88, 89, 90, 91, 9, 10, -10, -9, -8, -7, 76, 28, -94, 27, 28, -40, -96, -95, -96, -95, -94, -93, -92, -91, -71, -19, -18, -80, 95, -87, -74)) === "97,24-27,-75--69,85-91,9,10,-10--7,76,28,-94,27,28,-40,-96,-95,-96--91,-71,-19,-18,-80,95,-87,-74")
    assert(RangeExtraction.solution(List(60, 6, -42, -41, -40, -39, -38, -37, 14, 15, 16, 17, 18, 19, 20, -4, -12, -59, 99, 100, -94, -93, -92, -91, -90, -89, -20, -19, -18, -48, -47, -46, -45, -44, -43, -99, -98)) === "60,6,-42--37,14-20,-4,-12,-59,99,100,-94--89,-20--18,-48--43,-99,-98")
    assert(RangeExtraction.solution(List(2, 3, 4, -56, -55, -54, -20, -54, -74, -9, -8, -7, 20, -16, 71, 72, 73, 74, -20, 18, 8, 9, 10, 11, 12, 13, 14, 20, 21, 22, 23, 24, 25, 32, 98, 99, 100, 101, 102, 103, 104, -3, -14, -13, -12, 60, 61, 62, 63, 64, 65, 66, 19, 25, -61, -76, -75, -74, -73, -72, -71, -70, -90, 83, -30, -29, -28, -27, -26, 54, -91, -90, -89, -88, -87, -86, -85, 95)) === "2-4,-56--54,-20,-54,-74,-9--7,20,-16,71-74,-20,18,8-14,20-25,32,98-104,-3,-14--12,60-66,19,25,-61,-76--70,-90,83,-30--26,54,-91--85,95")
    assert(RangeExtraction.solution(List(4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 99, 24, -73, 64, 65, 66, 67, -46, -75, -74, -73, 38, 39, 58, -55, -54, -53, -52, -37, 58, 59, 82, 83, 84, 85, 49, -84, -83, -82, -81, -47, 93, 94, 95, 31, 32, 33, 74, 75, 76, 29, 30, 31, 32, 33, 92, -70, 62)) === "4-9,0-6,99,24,-73,64-67,-46,-75--73,38,39,58,-55--52,-37,58,59,82-85,49,-84--81,-47,93-95,31-33,74-76,29-33,92,-70,62")
    assert(RangeExtraction.solution(List(-7, -6, -5, -4, 8, -35, 66, -98, -13)) === "-7--4,8,-35,66,-98,-13")
    assert(RangeExtraction.solution(List(-99, 56, -34, 45, -10, 70, -97, -96, -95, 78)) === "-99,56,-34,45,-10,70,-97--95,78")
    assert(RangeExtraction.solution(List(-49, -48, -47, -46, -45, -44, -43, -17, -60, -17, -16, -15, -14, -13, -12, 56, 57, 58, 59, 60, 61, 62, -89, -46, -69, -68, -67, -66, -65, -64, -91, -90, -89, -72)) === "-49--43,-17,-60,-17--12,56-62,-89,-46,-69--64,-91--89,-72")
    assert(RangeExtraction.solution(List(27, 28, 29, 30, 31, 32, -96, -95, -94, -93, -92, -91, -90, 76, -86, -85, -84, -83, 60, 96, -19, -64, 54, 88, -26, -25, -24, -23, -22, 19, 20, 21, 22, -65, 42, -91)) === "27-32,-96--90,76,-86--83,60,96,-19,-64,54,88,-26--22,19-22,-65,42,-91")
    assert(RangeExtraction.solution(List(-84, 54, -57, -56, -55, -54, -53, -33, -32, 24, 37, 38, 39, 40, 41, 42, 43, 50, 51, 52, 53, 54, 55, 56, 22, -69, -68, -67, -66, -65, -64, -63, -35, 24, 98, -94, 44, -8, 64, 65, 66, -5, -4, 58, 59, 60, 61, 62, 63, 64, 84, 85, 86, 87, 88, 89)) === "-84,54,-57--53,-33,-32,24,37-43,50-56,22,-69--63,-35,24,98,-94,44,-8,64-66,-5,-4,58-64,84-89")
    assert(RangeExtraction.solution(List(-32, -31, 37, -82, 87, -52, -51, -93, -41, -40, -39, -38, 64, 65, -54, 46, 54, 19, 20, 21, 22, 57, 58, 59, 60, 73, 68, 67, 68, 69, 70, 71, 72, -82, -81, -80, -79, -78, -77, 4, 47, 48, 49, -39, 25, -62, 66, 98, 0, 1, 2, 3, 69, 5)) === "-32,-31,37,-82,87,-52,-51,-93,-41--38,64,65,-54,46,54,19-22,57-60,73,68,67-72,-82--77,4,47-49,-39,25,-62,66,98,0-3,69,5")
    assert(RangeExtraction.solution(List(-5, 68, 46, 67, 68, 69, 70, 71, 72, 73, 60, 61, 62, 63, 64, -48, 32, 33, 34, 35, 36, 37, 18, 19, 20, 21, -3, 39, 40, 41, 42, 43, 44, -56, -55, -19, 71, 58, 59, 60, -19, 49, 50, 92, -95, -94, -93, -92, -91, -63, -62, -33, -53, 68)) === "-5,68,46,67-73,60-64,-48,32-37,18-21,-3,39-44,-56,-55,-19,71,58-60,-19,49,50,92,-95--91,-63,-62,-33,-53,68")
    assert(RangeExtraction.solution(List(85, 50, 51, 52, 53, 54, 55, 21, -54, 14, -2, 36, 87, 88, 89, -6, 65, 76, -63, -62, -61, -60, -59, -58, -57, -57, -19, 85, 3, 4, 5, 6, 96, -56, -55, -54, -53, -52, -51, -50, -42, -41, -40, -39, -38, -54, 44, 45, 46, -28, 76, 36)) === "85,50-55,21,-54,14,-2,36,87-89,-6,65,76,-63--57,-57,-19,85,3-6,96,-56--50,-42--38,-54,44-46,-28,76,36")
    assert(RangeExtraction.solution(List(90, 91, -80, -72, -24, -23, -22, -21, -20, 56, -37, -36, -35, -34, -33, -28, -6, -12, -11, -10, -9)) === "90,91,-80,-72,-24--20,56,-37--33,-28,-6,-12--9")
    assert(RangeExtraction.solution(List(73)) === "73")
    assert(RangeExtraction.solution(List(-12, 45, -84, 32, -50, 8, 9, 10, 11, 12)) === "-12,45,-84,32,-50,8-12")
    assert(RangeExtraction.solution(List(-3, -21, -20, 20, 21, 22, 23, 24, 25, 26, 43, 13, 14, 15, 45, 46, 47, 48, 49, 50, -89, -88, -87, -86, -85, -84)) === "-3,-21,-20,20-26,43,13-15,45-50,-89--84")
    assert(RangeExtraction.solution(List(-24, 49, -43, -50, 52, 53, 83, 84, 85, 86, -8)) === "-24,49,-43,-50,52,53,83-86,-8")
    assert(RangeExtraction.solution(List(-74, -73, -72, -71, -9, 77, 78, 79, 80, 81, 82, 83, 68, 69, 70, 30, 31, 32, 33, 34, 35, 72, -53, -43, -42, -41, -40, -39, -38)) === "-74--71,-9,77-83,68-70,30-35,72,-53,-43--38")
    assert(RangeExtraction.solution(List(27, 62, -89, 94, -31, -30, -29, -28, 39, 86, -91, 46, -7, -18, 27, -70, 80, 81, 82, 83)) === "27,62,-89,94,-31--28,39,86,-91,46,-7,-18,27,-70,80-83")
    assert(RangeExtraction.solution(List(-30, -29, 29, 30, 31, 32, 33, 34, 18, 19, 20, 21, 22, 23, 39, 40, 41, 42, 43, 44, 45, -55, -54, -53, -52, 15, -73, 57, 58, 59, 60, 61, 33, 25, 26, 27, 28, -41, 84, 85, -51, -50, 16, -62, -61, -60, -59, -58, -57, -56, -46, -45, -44, -43, -35, -34, -33, -32, 86, 75)) === "-30,-29,29-34,18-23,39-45,-55--52,15,-73,57-61,33,25-28,-41,84,85,-51,-50,16,-62--56,-46--43,-35--32,86,75")
    assert(RangeExtraction.solution(List(16, 17, 18, 19, 47, 31, 22, 55, 81, 24, -3, -2, -1, 0, 1, 2, 3)) === "16-19,47,31,22,55,81,24,-3-3")
    assert(RangeExtraction.solution(List(21, 22, 23, 24, 86, -35, -34, -33, -32, -31, -30, 68, 69, 70, 71, 77, 82, 83, 84, 85, 86, 87, 81, 82, 83, 84, 85, 86, 87, 68, 72, 73, 74, -21, 47, 48, 75, 76, 77, 78, 79, 80, 81, -68, 29, -68, -67, -66, -65, 40, 41, 42, 62, -49, 39, 40, 41, 42, 43, 44, 45, -25, -26, -25, -24, -23, -22, -21, -20, -84, -83, 75, 76, 77, 78, 79, 80, 28, -52, -13, -66, -65, -64, -63, -85)) === "21-24,86,-35--30,68-71,77,82-87,81-87,68,72-74,-21,47,48,75-81,-68,29,-68--65,40-42,62,-49,39-45,-25,-26--20,-84,-83,75-80,28,-52,-13,-66--63,-85")
    assert(RangeExtraction.solution(List(72, 26, 87, 88, 34, 35, 36, 47, 60, 31, 32, -76, -75, -74, -73, -11, -10, -9, -8, -7, -6, -27, -26, -25, -24, -23, -92, -8, -7, -6, -5, -4, -3, 46, 47, 48, 49, 90, 68, 10, 7, 8, 9, -4, -3, -2)) === "72,26,87,88,34-36,47,60,31,32,-76--73,-11--6,-27--23,-92,-8--3,46-49,90,68,10,7-9,-4--2")
    assert(RangeExtraction.solution(List(10, 75, 83, -72, -71, -57, 24, 25, -47, -46, -69, -68, -67, -64, -63, -62, -61, -60, -59, 10, -31, 1, 86, 87, 88, 89, 90, 91, 92)) === "10,75,83,-72,-71,-57,24,25,-47,-46,-69--67,-64--59,10,-31,1,86-92")
    assert(RangeExtraction.solution(List(11, 12, 13, 14, -4, -77, -76, 46, 47, 48, 49, 50, 54, -61, -60, -59, -58, -57, -56, -55, -47, -46, -45, -44, -43, -42, -41, 26, 91, -91, -90, -89, 88, 89, 90, -31, 36, 41, 64, 96, 97, 98, 99, 100, 101, -96, -95, -81, 40, 23, 84, -81, -80, -79, -78, -77, -76, -75, 87, -32, -31, -30, -29, -28, 5, 92, 88, -94)) === "11-14,-4,-77,-76,46-50,54,-61--55,-47--41,26,91,-91--89,88-90,-31,36,41,64,96-101,-96,-95,-81,40,23,84,-81--75,87,-32--28,5,92,88,-94")
    assert(RangeExtraction.solution(List(-27, 42, 43, 59, -80, -48, 33, 34, 35, 36, 69, 23)) === "-27,42,43,59,-80,-48,33-36,69,23")
    assert(RangeExtraction.solution(List(93, 94, 95, 96, 97, -32, 25, 26, 27, 28, 29, 30, 31, -17, 55, 56, 57, 58, 59, -75, -74, -73, -72, -86, -85, -84, -83, -82, -81, -80, -16, -15, -14, -13, -12, -11, -48, -84, -83, -82, -81, -80, -91, 29, 97, -43, -42, -41, -40, -39, -38, -37, 6, 7, 40, 41, 42, 43, 42, 43, 44, 45, 46, 76, 46, -71, -70, -69, 7, 88, 89, 96, -6, -5, -4, 37, 70, 71, 72, 73, 29, 30, -11)) === "93-97,-32,25-31,-17,55-59,-75--72,-86--80,-16--11,-48,-84--80,-91,29,97,-43--37,6,7,40-43,42-46,76,46,-71--69,7,88,89,96,-6--4,37,70-73,29,30,-11")
    assert(RangeExtraction.solution(List(8, -15, -27, -26, -88, -87, -86, -85, -84, 67, 68, 69, 70, 71, 72, 73, -24, -23, -91, 11, 12, -18, -17, -16, -15, -14, -66, -65, -38, -37, -36, -35, -34, 14, -67, -4, -3, -2, -1, 0, 1, -77, -11, 40, 41, 42, 43, 44, 45, 46, -14, 31, 56, 57, 58, 59, 60, 61, 62, -16, -15, -14, -13, -12)) === "8,-15,-27,-26,-88--84,67-73,-24,-23,-91,11,12,-18--14,-66,-65,-38--34,14,-67,-4-1,-77,-11,40-46,-14,31,56-62,-16--12")
    assert(RangeExtraction.solution(List(61, 62, 63, 64, 65, 34, -49, -48, -47, -46, -45, -44, 92, 99, 100, 101, 102, 103, 104, -40, -39, 98, -49, -79, -78, 51, -33, -29, -69, -89, -88, -87, -86, -85, -84, 8, -8, -30, -55, -54, -51, -50, 31)) === "61-65,34,-49--44,92,99-104,-40,-39,98,-49,-79,-78,51,-33,-29,-69,-89--84,8,-8,-30,-55,-54,-51,-50,31")
  }
}